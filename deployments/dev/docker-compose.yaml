name: test-cash-register

services:
  backend:
    build:
      context: ../../
      dockerfile: deployments/dev/backend/Dockerfile
      tags:
        - "test-cash-register-backend:dev"
    container_name: test-cash-register-backend
    labels:
      deployment: dev
    volumes:
      - ../..:/app
      - backend-data:/run/app
    ports:
      - 8000:8000
    environment:
      SECRET_KEY: secret-key
      DEBUG: true
      INTERNAL_HOST: backend
      EXTERNAL_HOST_URL_PREFIX: http://localhost:8000

      POSTGRES_DB_NAME: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432

      CHECK_COMPANY_NAME: SUPER-COMPANY-NAME
      CHECK_INN: "*INN*"
      CHECK_KKM: "*KKM*"
    depends_on:
      postgres:
        condition: service_healthy
    command: cash-register runserver 0.0.0.0:8000
    healthcheck:
      test: wget backend:8000/healthcheck -q -O /dev/null
      start_period: 2m
      start_interval: 1s
      interval: 30s
    logging:
      driver: "loki"
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-batch-size: "100"
        loki-retries: 2
        loki-max-backoff: 1000ms
        loki-timeout: 1s

  postgres:
    image: postgres:16.3-alpine3.19
    container_name: test-cash-register-postgres
    labels:
      deployment: dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    healthcheck:
      test: pg_isready -d root -U root
      start_period: 1m
      start_interval: 1s
      interval: 5s

  loki:
    container_name: test-cash-register-loki
    labels:
      deployment: dev
    image: grafana/loki:latest
    environment:
      TZ: ${SYSTEM_TIMEZONE:-Europe/Moscow}
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    container_name: test-cash-register-grafana
    labels:
      deployment: dev
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - TZ=${SYSTEM_TIMEZONE:-Europe/Moscow}
    ports:
      - 3000:3000

volumes:
  backend-data:
    labels:
      deployment: dev

  postgres-data:
    labels:
      deployment: dev
